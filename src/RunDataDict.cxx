//
// File generated by rootcint at Tue Jun 10 13:35:13 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME RunDataDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RunDataDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void RunData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RunData(void *p = 0);
   static void *newArray_RunData(Long_t size, void *p);
   static void delete_RunData(void *p);
   static void deleteArray_RunData(void *p);
   static void destruct_RunData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RunData*)
   {
      ::RunData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RunData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RunData", ::RunData::Class_Version(), "./RunData.h", 17,
                  typeid(::RunData), DefineBehavior(ptr, ptr),
                  &::RunData::Dictionary, isa_proxy, 4,
                  sizeof(::RunData) );
      instance.SetNew(&new_RunData);
      instance.SetNewArray(&newArray_RunData);
      instance.SetDelete(&delete_RunData);
      instance.SetDeleteArray(&deleteArray_RunData);
      instance.SetDestructor(&destruct_RunData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RunData*)
   {
      return GenerateInitInstanceLocal((::RunData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RunData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *RunData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RunData::Class_Name()
{
   return "RunData";
}

//______________________________________________________________________________
const char *RunData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RunData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RunData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RunData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RunData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void RunData::Streamer(TBuffer &R__b)
{
   // Stream an object of class RunData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RunData::Class(),this);
   } else {
      R__b.WriteClassBuffer(RunData::Class(),this);
   }
}

//______________________________________________________________________________
void RunData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RunData.
      TClass *R__cl = ::RunData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NRUNS", &NRUNS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFILLS", &NFILLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "i_rtree", &i_rtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runnum", &runnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fill_rtree", &fill_rtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_bbc[10]", R_bbc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_zdc[10]", R_zdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_vpd[10]", R_vpd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_bbc_err[10]", R_bbc_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_zdc_err[10]", R_zdc_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_vpd_err[10]", R_vpd_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isConsistent", &isConsistent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "i_counts", &i_counts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bx", &bx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "blue", &blue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yell", &yell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kicked", &kicked);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fill_pol", &fill_pol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b_pol", &b_pol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_pol", &y_pol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b_pol_err", &b_pol_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_pol_err", &y_pol_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pattern_no", &pattern_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fill_thou", &fill_thou);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "blue_spin_map[2000][120]", blue_spin_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yell_spin_map[2000][120]", yell_spin_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kicked_bx_map[2000][120]", kicked_bx_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runnum_map[2000]", runnum_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b_pol_map[1000]", b_pol_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_pol_map[1000]", y_pol_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b_pol_err_map[1000]", b_pol_err_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_pol_err_map[1000]", y_pol_err_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pattern_map[1000]", pattern_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*counts", &counts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rtree", &rtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pol", &pol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*counts_tr", &counts_tr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rtree_tr", &rtree_tr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pol_tr", &pol_tr);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RunData(void *p) {
      return  p ? new(p) ::RunData : new ::RunData;
   }
   static void *newArray_RunData(Long_t nElements, void *p) {
      return p ? new(p) ::RunData[nElements] : new ::RunData[nElements];
   }
   // Wrapper around operator delete
   static void delete_RunData(void *p) {
      delete ((::RunData*)p);
   }
   static void deleteArray_RunData(void *p) {
      delete [] ((::RunData*)p);
   }
   static void destruct_RunData(void *p) {
      typedef ::RunData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RunData

/********************************************************
* RunDataDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRunDataDict();

extern "C" void G__set_cpp_environmentRunDataDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RunData.h");
  G__cpp_reset_tagtableRunDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevRunDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RunData */
static int G__RunDataDict_571_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunData[n];
     } else {
       p = new((void*) gvp) RunData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunData;
     } else {
       p = new((void*) gvp) RunData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RunDataDictLN_RunData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunData*) G__getstructoffset())->GetFill((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunData*) G__getstructoffset())->HashRun((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RunData*) G__getstructoffset())->Rellum((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RunData*) G__getstructoffset())->RellumErr((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RunData*) G__getstructoffset())->RellumConsistent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RunData*) G__getstructoffset())->BluePol((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RunData*) G__getstructoffset())->YellPol((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RunData*) G__getstructoffset())->BluePolErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RunData*) G__getstructoffset())->YellPolErr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunData*) G__getstructoffset())->BlueSpin((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunData*) G__getstructoffset())->YellSpin((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RunData*) G__getstructoffset())->Kicked((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunData*) G__getstructoffset())->Pattern((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RunData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RunData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RunData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RunDataDict_571_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RunDataDict_571_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RunData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RunData(*(RunData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RunDataDictLN_RunData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RunData G__TRunData;
static int G__RunDataDict_571_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RunData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RunData*) (soff+(sizeof(RunData)*i)))->~G__TRunData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RunData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RunData*) (soff))->~G__TRunData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RunDataDict_571_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunData* dest = (RunData*) G__getstructoffset();
   *dest = *(RunData*) libp->para[0].ref;
   const RunData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RunData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRunDataDict {
 public:
  G__Sizep2memfuncRunDataDict(): p(&G__Sizep2memfuncRunDataDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRunDataDict::*p)();
};

size_t G__get_sizep2memfuncRunDataDict()
{
  G__Sizep2memfuncRunDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRunDataDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RunDataDictLN_RunData))) {
     RunData *G__Lderived;
     G__Lderived=(RunData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RunDataDictLN_RunData),G__get_linked_tagnum(&G__RunDataDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRunDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RunDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RunDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RunDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RunDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RunDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RunDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RunDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RunDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RunDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RunDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__RunDataDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__RunDataDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RunDataDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RunDataDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RunDataDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RunDataDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RunDataDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RunDataDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RunDataDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RunDataDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RunData */
static void G__setup_memvarRunData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RunDataDictLN_RunData));
   { RunData *p; p=(RunData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->NRUNS)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NRUNS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFILLS)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NFILLS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->i_rtree)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"i_rtree=",0,"run index");
   G__memvar_setup((void*)((long)(&p->runnum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"runnum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fill_rtree)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fill_rtree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"t=",0,"run time");
   G__memvar_setup((void*)((long)(&p->R_bbc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"R_bbc[10]=",0,"rellum");
   G__memvar_setup((void*)((long)(&p->R_zdc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"R_zdc[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->R_vpd)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"R_vpd[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->R_bbc_err)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"R_bbc_err[10]=",0,"rellum uncertainty");
   G__memvar_setup((void*)((long)(&p->R_zdc_err)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"R_zdc_err[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->R_vpd_err)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"R_vpd_err[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isConsistent)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isConsistent=",0,"true iff zdc & vpd agree");
   G__memvar_setup((void*)((long)(&p->i_counts)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"i_counts=",0,"run index");
   G__memvar_setup((void*)((long)(&p->bx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"bx=",0,"bXing # @ STAR");
   G__memvar_setup((void*)((long)(&p->blue)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"blue=",0,"blue spin");
   G__memvar_setup((void*)((long)(&p->yell)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"yell=",0,"yellow spin");
   G__memvar_setup((void*)((long)(&p->kicked)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"kicked=",0,"true if bXing empty according to scaler data");
   G__memvar_setup((void*)((long)(&p->fill_pol)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fill_pol=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_pol)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b_pol=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y_pol)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_pol=",0,"polarization");
   G__memvar_setup((void*)((long)(&p->b_pol_err)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b_pol_err=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y_pol_err)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_pol_err=",0,"polarization uncertainty");
   G__memvar_setup((void*)((long)(&p->pattern_no)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pattern_no=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fill_thou)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fill_thou=",0,"set to 17000 for run13");
   G__memvar_setup((void*)((long)(&p->blue_spin_map)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"blue_spin_map[2000][120]=",0,"[max no. runs (assumed)] [no. bXings] ");
   G__memvar_setup((void*)((long)(&p->yell_spin_map)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"yell_spin_map[2000][120]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kicked_bx_map)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"kicked_bx_map[2000][120]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->runnum_map)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"runnum_map[2000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_pol_map)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b_pol_map[1000]=",0,"[max no. fills (assumed)]");
   G__memvar_setup((void*)((long)(&p->y_pol_map)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_pol_map[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_pol_err_map)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"b_pol_err_map[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y_pol_err_map)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_pol_err_map[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pattern_map)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pattern_map[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->counts)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RunDataDictLN_TFile),-1,-1,1,"counts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rtree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RunDataDictLN_TFile),-1,-1,1,"rtree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pol)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RunDataDictLN_TFile),-1,-1,1,"pol=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->counts_tr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RunDataDictLN_TTree),-1,-1,1,"counts_tr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rtree_tr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RunDataDictLN_TTree),-1,-1,1,"rtree_tr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pol_tr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RunDataDictLN_TTree),-1,-1,1,"pol_tr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RunDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRunDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRunData(void) {
   /* RunData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RunDataDictLN_RunData));
   G__memfunc_setup("RunData",687,G__RunDataDict_571_0_1, 105, G__get_linked_tagnum(&G__RunDataDictLN_RunData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFill",679,G__RunDataDict_571_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HashRun",697,G__RunDataDict_571_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rellum",625,G__RunDataDict_571_0_4, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runnum0 i - 'Int_t' 0 - rellumi "
"C - - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RellumErr",922,G__RunDataDict_571_0_5, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runnum0 i - 'Int_t' 0 - rellumi "
"C - - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RellumConsistent",1691,G__RunDataDict_571_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", "true if rellumi consistent (defined for R3)", (void*) NULL, 0);
   G__memfunc_setup("BluePol",691,G__RunDataDict_571_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YellPol",705,G__RunDataDict_571_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BluePolErr",988,G__RunDataDict_571_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YellPolErr",1002,G__RunDataDict_571_0_10, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BlueSpin",802,G__RunDataDict_571_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runnum0 i - 'Int_t' 0 - bXing", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YellSpin",816,G__RunDataDict_571_0_12, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runnum0 i - 'Int_t' 0 - bXing", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Kicked",587,G__RunDataDict_571_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runnum0 i - 'Int_t' 0 - bXing", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pattern",734,G__RunDataDict_571_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runnum0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RunDataDict_571_0_15, 85, G__get_linked_tagnum(&G__RunDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RunData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RunDataDict_571_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RunDataDict_571_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RunData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RunDataDict_571_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RunData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RunDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RunDataDict_571_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RunDataDict_571_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RunDataDict_571_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RunDataDict_571_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RunDataDict_571_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunData", 687, G__RunDataDict_571_0_27, (int) ('i'), G__get_linked_tagnum(&G__RunDataDictLN_RunData), -1, 0, 1, 1, 1, 0, "u 'RunData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunData", 813, G__RunDataDict_571_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RunDataDict_571_0_29, (int) ('u'), G__get_linked_tagnum(&G__RunDataDictLN_RunData), -1, 1, 1, 1, 1, 0, "u 'RunData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRunDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRunDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRunDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RunDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RunDataDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RunDataDictLN_RunData = { "RunData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRunDataDict() {
  G__RunDataDictLN_TClass.tagnum = -1 ;
  G__RunDataDictLN_TBuffer.tagnum = -1 ;
  G__RunDataDictLN_TMemberInspector.tagnum = -1 ;
  G__RunDataDictLN_TObject.tagnum = -1 ;
  G__RunDataDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__RunDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RunDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RunDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RunDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RunDataDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__RunDataDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RunDataDictLN_TTree.tagnum = -1 ;
  G__RunDataDictLN_TFile.tagnum = -1 ;
  G__RunDataDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RunDataDictLN_RunData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRunDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__RunDataDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RunDataDictLN_RunData),sizeof(RunData),-1,291072,(char*)NULL,G__setup_memvarRunData,G__setup_memfuncRunData);
}
extern "C" void G__cpp_setupRunDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRunDataDict()");
  G__set_cpp_environmentRunDataDict();
  G__cpp_setup_tagtableRunDataDict();

  G__cpp_setup_inheritanceRunDataDict();

  G__cpp_setup_typetableRunDataDict();

  G__cpp_setup_memvarRunDataDict();

  G__cpp_setup_memfuncRunDataDict();
  G__cpp_setup_globalRunDataDict();
  G__cpp_setup_funcRunDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRunDataDict();
  return;
}
class G__cpp_setup_initRunDataDict {
  public:
    G__cpp_setup_initRunDataDict() { G__add_setup_func("RunDataDict",(G__incsetup)(&G__cpp_setupRunDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRunDataDict() { G__remove_setup_func("RunDataDict"); }
};
G__cpp_setup_initRunDataDict G__cpp_setup_initializerRunDataDict;

